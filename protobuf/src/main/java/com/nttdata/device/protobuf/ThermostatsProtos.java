// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: thermostats.proto

package com.nttdata.device.protobuf;

public final class ThermostatsProtos {
  private ThermostatsProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DeviceTelemetryDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required double temperature = 1;
    /**
     * <code>required double temperature = 1;</code>
     */
    boolean hasTemperature();
    /**
     * <code>required double temperature = 1;</code>
     */
    double getTemperature();

    // required double humidity = 2;
    /**
     * <code>required double humidity = 2;</code>
     */
    boolean hasHumidity();
    /**
     * <code>required double humidity = 2;</code>
     */
    double getHumidity();
  }
  /**
   * Protobuf type {@code protobuf.DeviceTelemetryData}
   */
  public static final class DeviceTelemetryData extends
      com.google.protobuf.GeneratedMessage
      implements DeviceTelemetryDataOrBuilder {
    // Use DeviceTelemetryData.newBuilder() to construct.
    private DeviceTelemetryData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeviceTelemetryData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeviceTelemetryData defaultInstance;
    public static DeviceTelemetryData getDefaultInstance() {
      return defaultInstance;
    }

    public DeviceTelemetryData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeviceTelemetryData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              temperature_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              humidity_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nttdata.device.protobuf.ThermostatsProtos.internal_static_protobuf_DeviceTelemetryData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nttdata.device.protobuf.ThermostatsProtos.internal_static_protobuf_DeviceTelemetryData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.class, com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.Builder.class);
    }

    public static com.google.protobuf.Parser<DeviceTelemetryData> PARSER =
        new com.google.protobuf.AbstractParser<DeviceTelemetryData>() {
      public DeviceTelemetryData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceTelemetryData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceTelemetryData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required double temperature = 1;
    public static final int TEMPERATURE_FIELD_NUMBER = 1;
    private double temperature_;
    /**
     * <code>required double temperature = 1;</code>
     */
    public boolean hasTemperature() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double temperature = 1;</code>
     */
    public double getTemperature() {
      return temperature_;
    }

    // required double humidity = 2;
    public static final int HUMIDITY_FIELD_NUMBER = 2;
    private double humidity_;
    /**
     * <code>required double humidity = 2;</code>
     */
    public boolean hasHumidity() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double humidity = 2;</code>
     */
    public double getHumidity() {
      return humidity_;
    }

    private void initFields() {
      temperature_ = 0D;
      humidity_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTemperature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHumidity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, temperature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, humidity_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, temperature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, humidity_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.DeviceTelemetryData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nttdata.device.protobuf.ThermostatsProtos.internal_static_protobuf_DeviceTelemetryData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nttdata.device.protobuf.ThermostatsProtos.internal_static_protobuf_DeviceTelemetryData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.class, com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.Builder.class);
      }

      // Construct using com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        temperature_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        humidity_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nttdata.device.protobuf.ThermostatsProtos.internal_static_protobuf_DeviceTelemetryData_descriptor;
      }

      public com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData getDefaultInstanceForType() {
        return com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.getDefaultInstance();
      }

      public com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData build() {
        com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData buildPartial() {
        com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData result = new com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.temperature_ = temperature_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.humidity_ = humidity_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData) {
          return mergeFrom((com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData other) {
        if (other == com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.getDefaultInstance()) return this;
        if (other.hasTemperature()) {
          setTemperature(other.getTemperature());
        }
        if (other.hasHumidity()) {
          setHumidity(other.getHumidity());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTemperature()) {
          
          return false;
        }
        if (!hasHumidity()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required double temperature = 1;
      private double temperature_ ;
      /**
       * <code>required double temperature = 1;</code>
       */
      public boolean hasTemperature() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double temperature = 1;</code>
       */
      public double getTemperature() {
        return temperature_;
      }
      /**
       * <code>required double temperature = 1;</code>
       */
      public Builder setTemperature(double value) {
        bitField0_ |= 0x00000001;
        temperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double temperature = 1;</code>
       */
      public Builder clearTemperature() {
        bitField0_ = (bitField0_ & ~0x00000001);
        temperature_ = 0D;
        onChanged();
        return this;
      }

      // required double humidity = 2;
      private double humidity_ ;
      /**
       * <code>required double humidity = 2;</code>
       */
      public boolean hasHumidity() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double humidity = 2;</code>
       */
      public double getHumidity() {
        return humidity_;
      }
      /**
       * <code>required double humidity = 2;</code>
       */
      public Builder setHumidity(double value) {
        bitField0_ |= 0x00000002;
        humidity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double humidity = 2;</code>
       */
      public Builder clearHumidity() {
        bitField0_ = (bitField0_ & ~0x00000002);
        humidity_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.DeviceTelemetryData)
    }

    static {
      defaultInstance = new DeviceTelemetryData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.DeviceTelemetryData)
  }

  public interface DeviceOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .protobuf.DeviceTelemetryData telemetryData = 1;
    /**
     * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
     */
    java.util.List<com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData> 
        getTelemetryDataList();
    /**
     * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
     */
    com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData getTelemetryData(int index);
    /**
     * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
     */
    int getTelemetryDataCount();
    /**
     * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
     */
    java.util.List<? extends com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryDataOrBuilder> 
        getTelemetryDataOrBuilderList();
    /**
     * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
     */
    com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryDataOrBuilder getTelemetryDataOrBuilder(
        int index);

    // required string deviceId = 2;
    /**
     * <code>required string deviceId = 2;</code>
     */
    boolean hasDeviceId();
    /**
     * <code>required string deviceId = 2;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <code>required string deviceId = 2;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();
  }
  /**
   * Protobuf type {@code protobuf.Device}
   */
  public static final class Device extends
      com.google.protobuf.GeneratedMessage
      implements DeviceOrBuilder {
    // Use Device.newBuilder() to construct.
    private Device(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Device(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Device defaultInstance;
    public static Device getDefaultInstance() {
      return defaultInstance;
    }

    public Device getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Device(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                telemetryData_ = new java.util.ArrayList<com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData>();
                mutable_bitField0_ |= 0x00000001;
              }
              telemetryData_.add(input.readMessage(com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              deviceId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          telemetryData_ = java.util.Collections.unmodifiableList(telemetryData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nttdata.device.protobuf.ThermostatsProtos.internal_static_protobuf_Device_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nttdata.device.protobuf.ThermostatsProtos.internal_static_protobuf_Device_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nttdata.device.protobuf.ThermostatsProtos.Device.class, com.nttdata.device.protobuf.ThermostatsProtos.Device.Builder.class);
    }

    public static com.google.protobuf.Parser<Device> PARSER =
        new com.google.protobuf.AbstractParser<Device>() {
      public Device parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Device(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Device> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .protobuf.DeviceTelemetryData telemetryData = 1;
    public static final int TELEMETRYDATA_FIELD_NUMBER = 1;
    private java.util.List<com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData> telemetryData_;
    /**
     * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
     */
    public java.util.List<com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData> getTelemetryDataList() {
      return telemetryData_;
    }
    /**
     * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
     */
    public java.util.List<? extends com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryDataOrBuilder> 
        getTelemetryDataOrBuilderList() {
      return telemetryData_;
    }
    /**
     * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
     */
    public int getTelemetryDataCount() {
      return telemetryData_.size();
    }
    /**
     * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
     */
    public com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData getTelemetryData(int index) {
      return telemetryData_.get(index);
    }
    /**
     * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
     */
    public com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryDataOrBuilder getTelemetryDataOrBuilder(
        int index) {
      return telemetryData_.get(index);
    }

    // required string deviceId = 2;
    public static final int DEVICEID_FIELD_NUMBER = 2;
    private java.lang.Object deviceId_;
    /**
     * <code>required string deviceId = 2;</code>
     */
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string deviceId = 2;</code>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string deviceId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      telemetryData_ = java.util.Collections.emptyList();
      deviceId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDeviceId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTelemetryDataCount(); i++) {
        if (!getTelemetryData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < telemetryData_.size(); i++) {
        output.writeMessage(1, telemetryData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, getDeviceIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < telemetryData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, telemetryData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDeviceIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.nttdata.device.protobuf.ThermostatsProtos.Device parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.Device parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.Device parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.Device parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.Device parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.Device parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.Device parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.Device parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.Device parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.nttdata.device.protobuf.ThermostatsProtos.Device parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.nttdata.device.protobuf.ThermostatsProtos.Device prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Device}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.nttdata.device.protobuf.ThermostatsProtos.DeviceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nttdata.device.protobuf.ThermostatsProtos.internal_static_protobuf_Device_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nttdata.device.protobuf.ThermostatsProtos.internal_static_protobuf_Device_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nttdata.device.protobuf.ThermostatsProtos.Device.class, com.nttdata.device.protobuf.ThermostatsProtos.Device.Builder.class);
      }

      // Construct using com.nttdata.device.protobuf.ThermostatsProtos.Device.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTelemetryDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (telemetryDataBuilder_ == null) {
          telemetryData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          telemetryDataBuilder_.clear();
        }
        deviceId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nttdata.device.protobuf.ThermostatsProtos.internal_static_protobuf_Device_descriptor;
      }

      public com.nttdata.device.protobuf.ThermostatsProtos.Device getDefaultInstanceForType() {
        return com.nttdata.device.protobuf.ThermostatsProtos.Device.getDefaultInstance();
      }

      public com.nttdata.device.protobuf.ThermostatsProtos.Device build() {
        com.nttdata.device.protobuf.ThermostatsProtos.Device result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.nttdata.device.protobuf.ThermostatsProtos.Device buildPartial() {
        com.nttdata.device.protobuf.ThermostatsProtos.Device result = new com.nttdata.device.protobuf.ThermostatsProtos.Device(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (telemetryDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            telemetryData_ = java.util.Collections.unmodifiableList(telemetryData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.telemetryData_ = telemetryData_;
        } else {
          result.telemetryData_ = telemetryDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceId_ = deviceId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nttdata.device.protobuf.ThermostatsProtos.Device) {
          return mergeFrom((com.nttdata.device.protobuf.ThermostatsProtos.Device)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nttdata.device.protobuf.ThermostatsProtos.Device other) {
        if (other == com.nttdata.device.protobuf.ThermostatsProtos.Device.getDefaultInstance()) return this;
        if (telemetryDataBuilder_ == null) {
          if (!other.telemetryData_.isEmpty()) {
            if (telemetryData_.isEmpty()) {
              telemetryData_ = other.telemetryData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTelemetryDataIsMutable();
              telemetryData_.addAll(other.telemetryData_);
            }
            onChanged();
          }
        } else {
          if (!other.telemetryData_.isEmpty()) {
            if (telemetryDataBuilder_.isEmpty()) {
              telemetryDataBuilder_.dispose();
              telemetryDataBuilder_ = null;
              telemetryData_ = other.telemetryData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              telemetryDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTelemetryDataFieldBuilder() : null;
            } else {
              telemetryDataBuilder_.addAllMessages(other.telemetryData_);
            }
          }
        }
        if (other.hasDeviceId()) {
          bitField0_ |= 0x00000002;
          deviceId_ = other.deviceId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceId()) {
          
          return false;
        }
        for (int i = 0; i < getTelemetryDataCount(); i++) {
          if (!getTelemetryData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.nttdata.device.protobuf.ThermostatsProtos.Device parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.nttdata.device.protobuf.ThermostatsProtos.Device) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .protobuf.DeviceTelemetryData telemetryData = 1;
      private java.util.List<com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData> telemetryData_ =
        java.util.Collections.emptyList();
      private void ensureTelemetryDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          telemetryData_ = new java.util.ArrayList<com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData>(telemetryData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData, com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.Builder, com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryDataOrBuilder> telemetryDataBuilder_;

      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public java.util.List<com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData> getTelemetryDataList() {
        if (telemetryDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(telemetryData_);
        } else {
          return telemetryDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public int getTelemetryDataCount() {
        if (telemetryDataBuilder_ == null) {
          return telemetryData_.size();
        } else {
          return telemetryDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData getTelemetryData(int index) {
        if (telemetryDataBuilder_ == null) {
          return telemetryData_.get(index);
        } else {
          return telemetryDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public Builder setTelemetryData(
          int index, com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData value) {
        if (telemetryDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTelemetryDataIsMutable();
          telemetryData_.set(index, value);
          onChanged();
        } else {
          telemetryDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public Builder setTelemetryData(
          int index, com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.Builder builderForValue) {
        if (telemetryDataBuilder_ == null) {
          ensureTelemetryDataIsMutable();
          telemetryData_.set(index, builderForValue.build());
          onChanged();
        } else {
          telemetryDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public Builder addTelemetryData(com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData value) {
        if (telemetryDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTelemetryDataIsMutable();
          telemetryData_.add(value);
          onChanged();
        } else {
          telemetryDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public Builder addTelemetryData(
          int index, com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData value) {
        if (telemetryDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTelemetryDataIsMutable();
          telemetryData_.add(index, value);
          onChanged();
        } else {
          telemetryDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public Builder addTelemetryData(
          com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.Builder builderForValue) {
        if (telemetryDataBuilder_ == null) {
          ensureTelemetryDataIsMutable();
          telemetryData_.add(builderForValue.build());
          onChanged();
        } else {
          telemetryDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public Builder addTelemetryData(
          int index, com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.Builder builderForValue) {
        if (telemetryDataBuilder_ == null) {
          ensureTelemetryDataIsMutable();
          telemetryData_.add(index, builderForValue.build());
          onChanged();
        } else {
          telemetryDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public Builder addAllTelemetryData(
          java.lang.Iterable<? extends com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData> values) {
        if (telemetryDataBuilder_ == null) {
          ensureTelemetryDataIsMutable();
          super.addAll(values, telemetryData_);
          onChanged();
        } else {
          telemetryDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public Builder clearTelemetryData() {
        if (telemetryDataBuilder_ == null) {
          telemetryData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          telemetryDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public Builder removeTelemetryData(int index) {
        if (telemetryDataBuilder_ == null) {
          ensureTelemetryDataIsMutable();
          telemetryData_.remove(index);
          onChanged();
        } else {
          telemetryDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.Builder getTelemetryDataBuilder(
          int index) {
        return getTelemetryDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryDataOrBuilder getTelemetryDataOrBuilder(
          int index) {
        if (telemetryDataBuilder_ == null) {
          return telemetryData_.get(index);  } else {
          return telemetryDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public java.util.List<? extends com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryDataOrBuilder> 
           getTelemetryDataOrBuilderList() {
        if (telemetryDataBuilder_ != null) {
          return telemetryDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(telemetryData_);
        }
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.Builder addTelemetryDataBuilder() {
        return getTelemetryDataFieldBuilder().addBuilder(
            com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.Builder addTelemetryDataBuilder(
          int index) {
        return getTelemetryDataFieldBuilder().addBuilder(
            index, com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.DeviceTelemetryData telemetryData = 1;</code>
       */
      public java.util.List<com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.Builder> 
           getTelemetryDataBuilderList() {
        return getTelemetryDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData, com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.Builder, com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryDataOrBuilder> 
          getTelemetryDataFieldBuilder() {
        if (telemetryDataBuilder_ == null) {
          telemetryDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData, com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryData.Builder, com.nttdata.device.protobuf.ThermostatsProtos.DeviceTelemetryDataOrBuilder>(
                  telemetryData_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          telemetryData_ = null;
        }
        return telemetryDataBuilder_;
      }

      // required string deviceId = 2;
      private java.lang.Object deviceId_ = "";
      /**
       * <code>required string deviceId = 2;</code>
       */
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string deviceId = 2;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string deviceId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string deviceId = 2;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string deviceId = 2;</code>
       */
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>required string deviceId = 2;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        deviceId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Device)
    }

    static {
      defaultInstance = new Device(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Device)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_DeviceTelemetryData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_DeviceTelemetryData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Device_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Device_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021thermostats.proto\022\010protobuf\"<\n\023DeviceT" +
      "elemetryData\022\023\n\013temperature\030\001 \002(\001\022\020\n\010hum" +
      "idity\030\002 \002(\001\"P\n\006Device\0224\n\rtelemetryData\030\001" +
      " \003(\0132\035.protobuf.DeviceTelemetryData\022\020\n\010d" +
      "eviceId\030\002 \002(\tB0\n\033com.nttdata.device.prot" +
      "obufB\021ThermostatsProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_protobuf_DeviceTelemetryData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_protobuf_DeviceTelemetryData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_DeviceTelemetryData_descriptor,
              new java.lang.String[] { "Temperature", "Humidity", });
          internal_static_protobuf_Device_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_protobuf_Device_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_Device_descriptor,
              new java.lang.String[] { "TelemetryData", "DeviceId", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
