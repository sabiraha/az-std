// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

package com.nttdata.azure.iot.device;

import com.microsoft.azure.sdk.iot.service.exceptions.IotHubException;
import com.microsoft.azure.sdk.iot.service.Device;
import com.microsoft.azure.sdk.iot.service.RegistryManager;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.Arrays;
import java.util.List;

/**
 * Create device identity
 *
 */
public class DeviceIdentityBulkRegistration 
{

	public static void main( String[] args ) throws IOException, URISyntaxException, Exception
    {
		
        if (args.length <= 1 || args.length >= 3)
        {
            System.out.format(
                    "Expected 2 arguments but received: %d.\n"
                            + "The program should be called with the following args: \n"
                            + "1. IoT Hub Connection string] - String containing Hostname in one of the following formats: HostName=<iothub_host_name>;SharedAccessKeyName=<sharedAccessKeyName>;SharedAccessKey=<sharedAccessKey>\n"
                            + "2. [Device Ids string - separated by commas]\n",
                    args.length);
            return;
        }
		
        String connectionString = args[0];
        String deviceIds = args[1];
        List<String> deviceIdsList = Arrays.asList(deviceIds.trim().split(","));
        
		RegistryManager registryManager = RegistryManager.createFromConnectionString(connectionString);

		for(String deviceId : deviceIdsList){
			System.out.println("Device Id: " + deviceId);
				
			// Create a device that's enabled by default, 
			// with an autogenerated key.
			
			Device device = Device.createFromId(deviceId, null, null);
			try {
			  device = registryManager.addDevice(device);
			} catch (IotHubException iote) {
			  // If the device already exists.
			  try {
			    device = registryManager.getDevice(deviceId);
			  } catch (IotHubException iotf) {
			    iotf.printStackTrace();
			  }
			}
	
			// Display information about the
			// device you created.
			//System.out.println("Device Id: " + device.getDeviceId());
			System.out.println("Device key: " + device.getPrimaryKey());
		}	
    }
}
